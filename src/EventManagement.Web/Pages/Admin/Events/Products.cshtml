@page "{id:int}"
@model EventProductsModel

@{
    var orderedProducts = Model.Vm.Products.OrderBy(p => p.DisplayOrder).ToList();
}
<div class="jumbotron">
    <div class="container">
        <h1>@Model.EventInfo.Title</h1>
        <p class="lead">Rediger produkter for arrangementet.</p>
        <button type="button" class="btn btn-primary py-3" data-toggle="modal" data-target="#add-product-modal">
            Nytt produkt
        </button>
    </div>
</div>
<div class="container pt-3">
    
    <div class="row">
        <div class="col-12">

            <form id="main-form" method="post">

                <input asp-for="Vm.EventInfoId" type="hidden" />

                <div id="product-wrapper" class="form-group">
                    @for (int i = 0; i < orderedProducts.Count; i++)
                    {
                        var p = orderedProducts[i];
                        <div class="product-card">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col">
                                            <input class="product-id" value="@Model.Vm.Products[i].ProductId" type="hidden" />
                                            <h5 class="card-title product-name"><i class="fa fa-bars product-handle" aria-hidden="true"></i> @p.Name</h5>
                                            <p class="card-text product-description">@p.Description</p>
                                            <!--If no variants exist-->
                                            <h6 class="card-subtitle mb-2 text-muted product-price">@((float)p.Price)</h6>
                                            <input class="product-m-count" type="hidden" value="@p.MinimumQuantity" />
                                        </div>
                                        <div class="col-2">
                                            <small>
                                                <a href="#/" class="edit-product-link">Edit</a> |
                                                <a href="#/" class="text-muted delete-product-link">Delete</a>
                                                <br /><br />
                                                <a href="#/" class="text-primary add-variant-link">Add Variant</a>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-1"></div>
                                <div class="col variant-wrapper">
                                    @for (int j = 0; j < p.ProductVariants?.Count; j++)
                                    {
                                        var v = p.ProductVariants[j];
                                        <div class="card variant-card">
                                            <input class="variant-id" value="@p.ProductVariants[j].ProductVariantId" type="hidden" />
                                            <div class="row">
                                                <div class="col">
                                                    <h5 class="card-title variant-name">@v.Name</h5>
                                                    <p class="card-text variant-description">@v.Description</p>
                                                    <h6 class="card-subtitle mb-2 text-muted variant-price">@((float)v.Price)</h6>
                                                </div>
                                                <div class="col-2">
                                                    <small>
                                                        <a href="#" class="edit-variant-link">Edit</a> |
                                                        <a href="#" onclick="$(this).closest('.variant-card').remove()" class="text-muted delete-variant-link">Delete</a>
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    @*Added products will be listed here.*@
                </div>


                <div class="form-group">
                    <input type="submit" value="Lagre" class="btn btn-default" />
                </div>

            </form>
        </div>
    </div>
</div>



<!-- Add product modal -->
<div class="modal fade" id="add-product-modal" tabindex="-1" role="dialog" aria-labelledby="add-product-modal-title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="add-product-modal-title">Add Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="control-label">Product Name</label>
                    <input id="input-product-name" class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="control-label">Product Description</label>
                    <input id="input-product-description" class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="control-label">Mandatory Number</label>
                    <input id="input-product-m-number" type="number" value="0" class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="control-label">Price</label>
                    <input id="input-product-price" type="number" class="form-control" required />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="btn-add-product" type="button" class="btn btn-primary">Save Product</button>
            </div>
        </div>
    </div>
</div>

<!-- Add variant modal -->
<div class="modal fade" id="add-variant-modal" tabindex="-1" role="dialog" aria-labelledby="add-variant-modal-title" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="add-variant-modal-title">Add Product Variant</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="control-label">Name</label>
                    <input id="input-variant-name" class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="control-label">Description</label>
                    <input id="input-variant-description" class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="control-label">Price</label>
                    <input id="input-variant-price" type="number" class="form-control" required />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="btn-add-variant" type="button" class="btn btn-primary">Save Product</button>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!--The product template-->
    <template id="product-template">
        <div class="product-card">
            <div class="card">
                <div class="card-body">
                    <input class="product-id" value="0" type="hidden" />
                    <div class="row">
                        <div class="col">
                            <h5 class="card-title product-name"></h5>
                            <p class="card-text product-description"></p>
                            <!--If no variants exist-->
                            <h6 class="card-subtitle mb-2 text-muted product-price"></h6>
                            <input class="product-m-count" type="hidden" value="0" />
                        </div>
                        <div class="col-2">
                            <small>
                                <a href="#/" class="edit-product-link">Edit</a> |
                                <a href="#/" class="text-muted delete-product-link">Delete</a>
                                <br /><br />
                                <a href="#/" class="text-primary add-variant-link">Add Variant</a>
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-1"></div>
                <div class="col variant-wrapper">

                </div>
            </div>
        </div>
    </template>


    <!-- The product variant template -->
    <template id="variant-template">
        <div class="card variant-card">
            <input class="variant-id" value="0" type="hidden" />
            <div class="row">
                <div class="col">
                    <h5 class="card-title variant-name"></h5>
                    <p class="card-text variant-description"></p>
                    <h6 class="card-subtitle mb-2 text-muted variant-price"></h6>
                </div>
                <div class="col-2">
                    <small>
                        <a href="#/" onclick="$(this).closest('.variant-card').remove()" class="text-muted delete-variant-link">Delete</a>
                    </small>
                </div>
            </div>
        </div>
    </template>

    <script>

        // IIFE to setup the products section
        (function () {
            const $modal = $('#add-product-modal');
            const $productName = $($modal).find('#input-product-name');
            const $productDescription = $($modal).find('#input-product-description');
            const $productPrice = $($modal).find('#input-product-price');
            const $productMinimumQuantity = $($modal).find('#input-product-m-number');

            const $variantModal = $('#add-variant-modal');
            const $variantName = $($variantModal).find('#input-variant-name');
            const $variantDescription = $($variantModal).find('#input-variant-description');
            const $variantPrice = $($variantModal).find('#input-variant-price');
            var $currentProduct; // Used to keep track of the product to edit/to add the variant to.
            var $currentVariant; // Used to keep track of the variant to apply the edit to.

            const mainForm = document.getElementById('main-form');
            const productsTemplate = document.querySelector('#product-template').content;
            const variantsTemplate = document.querySelector('#variant-template').content;
            const productsWrapper = document.querySelector('#product-wrapper');
            let isEdit = false; // Add / Edit flag

            function bindEditProductLink($el) {
                let $card = $el.closest('.product-card');

                $productName.val($card.find('.product-name').text())
                $productDescription.val($card.find('.product-description').text())
                $productPrice.val($card.find('.product-price').text())
                $productMinimumQuantity.val($card.find('.product-m-count').val())

                isEdit = true;
                $currentProduct = $card;
                $modal.modal('show');
            }
            $('.edit-product-link').bind('click', function(e) {
                bindEditProductLink($(this))
            });

            function bindEditVariantLink($el) {
                let $card = $el.closest('.variant-card');

                $variantName.val($card.find('.variant-name').text());
                $variantDescription.val($card.find('.variant-description').text());
                $variantPrice.val($card.find('.variant-price').text());

                isEdit = true;
                $currentProduct = $(this).closest('.product-card');
                $currentVariant = $card;
                $variantModal.modal('show');
            }
            $('.edit-variant-link').bind('click', function(e) {
                bindEditProductLink($(this))
            });

            // Bind the delete product and add variant links
            $('.delete-product-link').bind('click', function(e) {
                // Remove the product card from DOM
                $(this).closest('.product-card').remove();
            });

            $('.add-variant-link').bind('click', function(e) {
                // Show the modal
                $variantModal.modal('show');
                $currentProduct = $(this).closest('.product-card');
            })

            // Bind the last added card's links
            function bindLatestProductLinks() {
                // Event handler for the delete link
                $('.delete-product-link').last().bind('click', function(e) {
                    // Remove the product card from DOM
                    $(this).closest('.product-card').remove();
                });

                $('.add-variant-link').last().bind('click', function(e) {
                    // Show the modal
                    $variantModal.modal('show');
                    $currentProduct = $(this).closest('.product-card');
                })
                $('.edit-product-link').last().bind('click', function(e) {
                    bindEditProductLink($(this))
                })
            }

            function addInputToMainForm(name, value) {
                let input = document.createElement("input");
                input.setAttribute("type", "hidden");
                input.setAttribute("name", name);
                input.setAttribute("value", value);
                mainForm.appendChild(input);
            }

            // Event handler for the product modal submit button
            $('#btn-add-product').bind('click', function(e) {
                // TODO: validate the inputs!

                // Clone the product template
                let clone = productsTemplate.cloneNode(true);
                if(isEdit === true) {
                    clone = $currentProduct[0];
                }
                // And populate it with values from the modal
                clone.querySelector('.product-name').innerText = $productName.val();
                clone.querySelector('.product-description').innerText = $productDescription.val();
                clone.querySelector('.product-price').innerText = $productPrice.val();
                clone.querySelector('.product-m-count').value = $productMinimumQuantity.val();

                if(isEdit != true) {
                    // Add the cloned template to the DOM
                    productsWrapper.appendChild(clone);
                    // Set event handlers to the newly added product actions
                    bindLatestProductLinks();
                }

                isEdit = false;
                $modal.modal('hide');
            });

            // Event handler for the variant modal submit button
            $('#btn-add-variant').bind('click', function(e) {
                // TODO: validate the inputs!

                // Clone the product template
                let clone = variantsTemplate.cloneNode(true);
                if(isEdit === true) {
                    clone = $currentVariant[0];
                }
                // And populate it with values from the modal
                clone.querySelector('.variant-name').innerText = $variantName.val();
                clone.querySelector('.variant-description').innerText = $variantDescription.val();
                clone.querySelector('.variant-price').innerText = $variantPrice.val();

                if(isEdit != true) {
                    // Add the cloned template to the DOM
                    const $variantsWrapper = $currentProduct.find('.variant-wrapper');
                    $variantsWrapper[0].appendChild(clone);
                }

                isEdit = false;
                $variantModal.modal('hide');
            });

            // Event handler executed when the form is submitted
            mainForm.onsubmit = function() {
                // Add hidden-inputs to the DOM here.
                $('.product-card').each(function(i, el){
                    // console.log('['+i+']:' + $(this).find('.product-id').first().val() || 0)
                    addInputToMainForm("Vm.Products[" + i + "].ProductId", $(this).find('.product-id').first().val() || 0);
                    addInputToMainForm("Vm.Products[" + i + "].Name", $(this).find('.product-name').first().text());
                    addInputToMainForm("Vm.Products[" + i + "].Description", $(this).find('.product-description').first().text());
                    addInputToMainForm("Vm.Products[" + i + "].Price", $(this).find('.product-price').first().text() || 0);
                    addInputToMainForm("Vm.Products[" + i + "].MinimumQuantity", $(this).find('.product-m-count').first().val());

                    $(el).find('.variant-card').each(function(j, vel){
                        // console.log('['+i+']['+j+']:' + $(this).find('.variant-id').first().val() || 0)
                        addInputToMainForm("Vm.Products[" + i + "].ProductVariants[" + j + "].ProductVariantId", $(this).find('.variant-id').first().val() || 0);
                        addInputToMainForm("Vm.Products[" + i + "].ProductVariants[" + j + "].Name", $(this).find('.variant-name').first().text());
                        addInputToMainForm("Vm.Products[" + i + "].ProductVariants[" + j + "].Description", $(this).find('.variant-description').first().text());
                        addInputToMainForm("Vm.Products[" + i + "].ProductVariants[" + j + "].Price", $(this).find('.variant-price').first().text() || 0);
                    });
                });
            };

            // List with handle
            const wrapper = document.getElementById('product-wrapper')
            Sortable.create(wrapper, {
              handle: '.product-handle',
              animation: 150,
              cancel: null
            });
        })();
    </script>
}
