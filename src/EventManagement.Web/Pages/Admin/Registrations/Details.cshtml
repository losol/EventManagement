@page "{id:int}"
@model losol.EventManagement.Pages.Admin.Registrations.DetailsModel

@{
    ViewData["Title"] = "Details";
}
<div class="bg-gray-300 py-3">
    <div class="container">
        <h1>Registrering #@Model.Registration.RegistrationId</h1>
        <p class="lead">Arrangement: @Model.Registration.EventInfo.Title</p>

        <div class="clearfix">
            <div class="mr-3 float-left">
                Status:
                <select asp-for="Registration.Status" asp-items="Html.GetEnumSelectList<Registration.RegistrationStatus>()">
                </select>
            </div>
            <div class="mr-3 float-left">
                Type deltaker:
                <select asp-for="Registration.Type" asp-items="Html.GetEnumSelectList<Registration.RegistrationType>()">
                </select>
            </div>
        </div>
        <div class="py-3 clearfix">
            <button class="btn btn-danger" onclick="CancelRegistration()">Meld av</button>
        </div>

    </div>
</div>
<div class="container py-5">
    <div class="row">
        <div class="col-md-6">
            <div class="card" id="participantinfo-card">
                <div class="card-body">
                    <h4>Deltaker</h4>
                    <small>Navn</small>
                    <div contenteditable="true" class="participantinfo" id="participant-name">
                        @Html.DisplayFor(model => model.Registration.ParticipantName)
                    </div>
                    <br />

                    <small>Stilling</small>
                    <div contenteditable="true" class="participantinfo" id="participant-jobtitle">
                        @Html.DisplayFor(model => model.Registration.ParticipantJobTitle)
                    </div>
                    <br />

                    <small>Sted</small>
                    <div contenteditable="true" class="participantinfo" id="participant-city">
                        @Html.DisplayFor(model => model.Registration.ParticipantCity)
                    </div>
                    <br />

                    <small>Arbeidsgiver</small>
                    <div contenteditable="true" class="participantinfo" id="participant-employer">
                        @Html.DisplayFor(model => model.Registration.ParticipantEmployer)
                    </div>
                </div>
            </div>
        </div>
            <div class="col-md-6">
            <div class="card" id="customerinfo-card">
                <div class="card-body">
                    <h4>Betalingsinformasjon</h4>
                    <small>Kundenavn</small>
                    <div contenteditable="true" class="customerinfo" id="customer-name">
                        @Html.DisplayFor(model => model.Registration.CustomerName)
                    </div>
                    <br />

                    <small>Kundeepost</small>
                    <div contenteditable="true" class="customerinfo" id="customer-email">
                        @Html.DisplayFor(model => model.Registration.CustomerEmail)
                    </div>
                    <br />

                    <small>Adresse</small>
                    <div contenteditable="true" class="customerinfo" id="customer-address">
                        @Html.DisplayFor(model => model.Registration.CustomerAddress)
                    </div>
                    <br />

                    <small>Postnummer</small>
                    <div contenteditable="true" class="customerinfo" id="customer-zip">
                        @Html.DisplayFor(model => model.Registration.CustomerZip)
                    </div>
                    <br />


                    <small>Poststed</small>
                    <div contenteditable="true" class="customerinfo" id="customer-city">
                        @Html.DisplayFor(model => model.Registration.CustomerCity)
                    </div>
                    <br />

                     <small>Land</small>
                    <div contenteditable="true" class="customerinfo" id="customer-country">
                        @Html.DisplayFor(model => model.Registration.CustomerCountry)
                    </div>
                    <br />

                    <small>Org.nr</small>
                    <div contenteditable="true" class="customerinfo" id="customer-vatnumber">
                        @Html.DisplayFor(model => model.Registration.CustomerVatNumber)
                    </div>
                    <br />

                    <small>Fakturareferanse</small>
                    <div contenteditable="true" class="customerinfo" id="customer-invoicereference">
                        @Html.DisplayFor(model => model.Registration.CustomerInvoiceReference)
                    </div>
                    <br />

                    <small>Betalingsmetode</small><br />
                    <select asp-for="Registration.PaymentMethod">
                        @foreach(var paymethod in Model.PaymentMethods) {
                            <option value="@paymethod.Provider">@paymethod.Name</option>
                        }
                    </select>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <h2>Notater</h2>
    @Model.Registration.Notes

    <h2>Logg</h2>
    @Model.Registration.Log

     <h2>Ordre</h2>
        @{
            foreach (var order in Model.Registration.Orders) {
                <a asp-page="../Orders/Details" asp-route-id="@order.OrderId" class="btn btn-secondary link-decoration-none">Vis ordre @order.OrderId </a>
            }
        }

    <h2>Annet</h2>
    <ul>
        <li>Kursbevis: @Model.Registration.Certificate</li>
        <li>Brukerid: @Model.Registration.UserId</li>
        <li>Gratis? @Model.Registration.FreeRegistration</li>
        <li>Betalingsmetode @Model.Registration.PaymentMethod </li>
    </ul>
</div>

@section scripts {
<script>
    // *******PARTICIPANT INFO SCRIPTS *******
    // Add change listener to all contenteditables
    var contenteditables = document.querySelectorAll(".participantinfo");
    [].forEach.call(contenteditables, function (content) {
        // Save inital text when entering
        content.addEventListener("focus", function () {
            content.setAttribute("data-initial-text", content.innerHTML);
        });
        // And check if it has changed
        content.addEventListener("blur", function () {
            if (content.getAttribute("data-initial-text") !== content.innerHTML) {
                saveParticipantInfo();
            }
        });
    });
    function saveParticipantInfo() {
        const postData = {
            ParticipantName: $('#participant-name').text().trim(),
            ParticipantJobTitle: $('#participant-jobtitle').text().trim(),
            ParticipantCity: $('#participant-city').text().trim(),
            ParticipantEmployer: $('#participant-employer').text().trim()
        };
        $.postJSON('/api/v0/registrations/@Model.Registration.RegistrationId/participant/update', postData)
            .done(function() {
                toastr.success('Lagret deltakerinfo');
            })
            .fail(function() {
                toastr.error('Noe gikk galt... Sorry altså');
            });
    };


    // *******CUSTOMER INFO SCRIPTS *******
    var contenteditables = document.querySelectorAll(".customerinfo");
    [].forEach.call(contenteditables, function (content) {
        // Save inital text when entering
        content.addEventListener("focus", function () {
            content.setAttribute("data-initial-text", content.innerHTML);
        });
        // And check if it has changed, and save it
        content.addEventListener("blur", function () {
            if (content.getAttribute("data-initial-text") !== content.innerHTML) {
                saveCustomerInfo();
            }
        });
    });

    function saveCustomerInfo() {
        var customerPostData = {
            CustomerName: $('#customer-name').text().trim(),
            CustomerEmail: $('#customer-email').text().trim(),
            CustomerAddress: $('#customer-address').text().trim(),
            CustomerZip: $('#customer-zip').text().trim(),
            CustomerCity: $('#customer-city').text().trim(),
            CustomerCountry: $('#customer-country').text().trim(),
            CustomerVatNumber: $('#customer-vatnumber').text().trim(),
            CustomerInvoiceReference: $('#customer-invoicereference').text().trim()
        };
        $.postJSON('/api/v0/registrations/@Model.Registration.RegistrationId/customer/update', customerPostData)
            .done(function() {
                toastr.success('Lagret kundeinfo');
            })
            .fail(function() {
                toastr.error('Noe gikk galt... Sorry altså');
            });
    };

    // ******* REGISTRATION STATUS SCRIPTS *******
    $('#Registration_Status').on('change', function() {
        var status = $("option:selected", this).text();
        $.postJSON('/api/v0/registrations/status/update/@Model.Registration.RegistrationId/' + status, null)
            .done(function() {
                toastr.success('Lagret status');
            })
            .fail(function() {
                toastr.error('Noe gikk galt... Sorry altså');
                location.reload();
            });
    })

    // ******* REGISTRATION TYPE SCRIPTS *******
    $('#Registration_Type').on('change', function() {
        var type = $("option:selected", this).text();
        $.postJSON('/api/v0/registrations/type/update/@Model.Registration.RegistrationId/' + type, null)
            .done(function() {
                toastr.success('Lagret deltakertype');
            })
            .fail(function() {
                toastr.error('Noe gikk galt... Sorry altså');
                location.reload();
            });
    })

    // ******* CANCEL REGISTRATION BUTTON *******
    function CancelRegistration() {
        var val = 'Cancelled';
        $('#Registration_Status option:contains(' + val + ')').prop({selected: true});
        $('#Registration_Status').change();
    };


    // ******* PAYMENTMETHOD UPDATE  SCRIPTS *******
    $('#Registration_PaymentMethod').on('change', function() {
        var paymentMethod = $("option:selected", this).val();
        $.postJSON('/api/v0/registrations/@Model.Registration.RegistrationId/paymentmethod/update/' + paymentMethod, null)
            .done(function() {
                toastr.success('Lagret status');
            })
            .fail(function() {
                toastr.error('Noe gikk galt... Sorry altså');
                location.reload();
            });
    })


</script>
}