@page "{id:int}"
@inject IOrderService orderService
@inject IProductsService productsService
@using losol.EventManagement.Web.Pages.Admin.Orders
@{
    var id = Convert.ToInt32(RouteData.Values["id"]);
    var order = await orderService.GetByIdAsync(id);
    var products = await productsService.GetProductsForEventAsync(order.Registration.EventInfoId);
    var variants = products.SelectMany(p => p.ProductVariants)
                           .Select(x => new { id = x.ProductVariantId, pid = x.ProductId, name = x.Name });
}
<div class="bg-gray-300 py-3">
    <div class="container"> 
        <h2>
            Ordre #@order.OrderId - @order.Registration.EventInfo.Title
            <order-status value="@order.Status" />
        </h2>
        <div class="d-print-none"> 
        @if(order.Status != Order.OrderStatus.Cancelled)
        {
            <div class="btn-group " role="group">
                @if(order.GetNextStatus() != null)
                {
                    <button type="button" class="btn btn-primary" onclick="updateOrderStatus('@order.GetNextStatus()')">
                        @order.GetOrderStatusActionText()
                    </button>
                }

                <div class="btn-group " role="group">
                    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    </button>
                    <div class="dropdown-menu">
                        <button class="dropdown-item text-danger" onclick="updateOrderStatus('Cancelled')">Cancel</button>
                    </div>
                </div>
            </div>
            }
            else 
            {
                <button type="button" class="btn btn-primary " onclick="reopenOrder()">
                    Reopen
                </button>
            }
            @if(order.Status != Order.OrderStatus.Invoiced)
            {
                <button class="btn btn-small btn-secondary" data-toggle="popover" 
                    data-trigger="focus" 
                    title="Make order free?" 
                    data-content="<button class='btn btn-sm btn-danger' onclick='makeFree()'>Yes</button><button class='btn btn-sm btn-success'>No</button>">Make Free</button>
            }
        </div>
    </div>
</div>
<div class="container py-3"> 
        <div class="row justify-content-between">
            <div class="card col-md-5 m-2">
                <div class="card-body">
                <h4 class="card-title">Deltaker</h4>
                <hr />
                <dl class="">
                    <dt>Navn</dt>
                    <dd>@(order.User?.Name ?? "-")</dd>
                    <dt>Epost</dt>
                    <dd>@(order.User?.Email ?? "-")</dd>
                    <dt>Telefon</dt>
                    <dd>@(order.User?.PhoneNumber ?? "-")</dd>
                </dl>
                </div>
            </div>
            
            <div class="card col-md-5 m-2">
                <div class="card-body">
                    <h4 class="card-title">Betalingsinformasjon</h4>
                    <hr />
                    <dl class=""> 
                        <dt class="">Kundenavn</dt>
                        <dd class="">@order.CustomerName &nbsp;</dd>
                        <dt class="">Epost for faktura</dt>
                        <dd class="">@order.CustomerEmail &nbsp;</dd>
                        <dt class="">Organisasjonsnummer</dt>
                        <dd class="">@order.CustomerVatNumber &nbsp;</dd>
                        <dt class="">Fakturareferanse</dt>
                        <dd class="">@order.CustomerInvoiceReference &nbsp;</dd>
                        <dt class="">Betalingsmetode</dt>
                        <dd class=""> @order.PaymentMethod?.Name</dd>
               
                    </dl>

            <a href="#" data-toggle="modal" class="d-print-none"
                data-target="#edit-order-modal">Endre detaljer</a>
                </div>
            </div>
        </div>
            
            <h2>
                Ordrelinjer 
                @if(order.CanEdit)
                {
                    <button class="ml-3 btn btn-success d-print-none" 
                        data-toggle="modal" 
                        data-target="#add-orderline-modal">Ny ordrelinje</button>
                }
            </h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Linje#</th>
                        <th>Produkt ID</th>
                        <th>Produktnav</th>
                        <th>Variant ID</th>
                        <th>Variant navn</th>
                        <th>Antall</th>
                        <th>Pris</th>
                        @if(order.CanEdit)
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach(var line in order.OrderLines)
                    {
                        <tr>
                            <td>@line.OrderLineId</td>
                            <td>@line.ProductId</td>
                            <td>@line.ProductName</td>
                            <td>@(line.ProductVariantId?.ToString() ?? "NA")</td>
                            <td>@(line.ProductVariantName ?? "NA")</td>
                            <td>@line.Quantity</td>
                            <td>@line.Price</td>
                            @if(order.CanEdit)
                            {
                                <td class="d-print-none">
                                    <a tabindex="0" 
                                        class="btn btn-sm btn-primary btn-edit-line" 
                                        role="button"    
                                        data-quantity="@line.Quantity"
                                        data-id="@line.OrderLineId"
                                        data-product-id="@line.ProductId"
                                        data-price='@line.Price.ToString("F",System.Globalization.CultureInfo.InvariantCulture)'
                                        data-trigger="focus">
                                        <i class="material-icons md-light md-18">edit</i>
                                    </a>
                                    <a tabindex="0" class="btn btn-sm btn-danger" role="button"       
                                        data-toggle="popover" 
                                        data-trigger="focus" 
                                        title="Delete line?" 
                                        data-content="<button class='btn btn-sm btn-danger btn-delete-line' onclick='deleteOrderLine(@line.OrderLineId)'>Yes</button><button class='btn btn-sm btn-success'>No</button>">
                                        <i class="material-icons md-light md-18">delete</i>
                                    </a>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>

            <strong>Kommentarer</strong><br />
            <pre>@order.Comments</pre>

            <strong>Logg</strong><br />
            <pre>@order.Log</pre>

            <h4>Ordreinformasjon</h4>
            <dl class="row">
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order ID</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.OrderId</dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">User ID</dt>
                <dd class="col-6 col-md-9 col-lg-10"><code>@(order.UserId ?? "Unavailable")</code></dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Registration ID</dt>
                <dd class="col-6 col-md-9 col-lg-10"><a asp-page="../Registrations/Details" asp-route-id="@order.RegistrationId">@order.RegistrationId</a></dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order Status</dt>
                <dd class="col-6 col-md-9 col-lg-10"><order-status value="@order.Status" /></dd>
                <dt class="col-6 col-md-3 col-lg-2 text-right">Order Time</dt>
                <dd class="col-6 col-md-9 col-lg-10">@order.OrderTime</dd>
            </dl>
        </div>
    </div>
</div>


<!-- Add OrderLine Modal -->
<div class="modal fade" 
    id="add-orderline-modal" 
    tabindex="-1" 
    role="dialog" 
    data-keyboard="false"
    aria-labelledby="add-orderline-modal-title" 
    aria-hidden="true">
    <div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="add-orderline-modal-title">Add Order Line</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        </div>
        <div class="modal-body">
        <div class="form-group">
            <label class="control-label">Product</label>
            <select id="selected-product" class="form-control">
                <option selected disabled>Select Product</option>   
                @foreach(var p in products) 
                {
                    <option value="@p.ProductId">@p.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label class="control-label">Variant</label>
            <select id="selected-variant" class="form-control" disabled>
            </select>
        </div>
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button id="btn-add-orderline" type="button" class="btn btn-primary">Add Line <i class="fa fa-spinner fa-pulse fa-fw" aria-hidden="true" style="display:none"></i></button>
        </div>
    </div>
    </div>
</div>

<!-- Edit OrderLine Modal -->
<div class="modal fade" 
    id="edit-orderline-modal" 
    tabindex="-1" 
    role="dialog" 
    data-keyboard="false"
    aria-labelledby="edit-orderline-modal-title" 
    aria-hidden="true">
    <div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="edit-orderline-modal-title">Edit Order Line</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        </div>
        <div class="modal-body">
        <div class="form-group">
            <label class="control-label">Quantity</label>
            <input id="input-edit-quantity" class="form-control" type="number" />
        </div>
        <div class="form-group">
            <label class="control-label">Price</label>
            <input id="input-edit-price" class="form-control" type="number" min="0" step="any" />
        </div>
        <div class="form-group">
            <label class="control-label">Variant</label>
            <select id="input-edit-variant" class="form-control" disabled>
            </select>
        </div>
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button id="btn-edit-orderline" type="button" class="btn btn-primary">Save <i class="fa fa-spinner fa-pulse fa-fw" aria-hidden="true" style="display:none"></i></button>
        </div>
    </div>
    </div>
</div>

<!-- Edit Order (customer/comments) Modal -->
<div class="modal fade" 
    id="edit-order-modal" 
    tabindex="-1" 
    role="dialog" 
    data-keyboard="false"
    aria-labelledby="edit-order-modal-title" 
    aria-hidden="true">
    <div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="edit-order-modal-title">Edit Order Information</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        </div>
        <div class="modal-body">
        <div class="form-group">
            <label class="control-label">Customer Name</label>
            <input id="input-edit-customer-name" class="form-control" value="@order.CustomerName" />
        </div>
        <div class="form-group">
            <label class="control-label">Customer Email</label>
            <input id="input-edit-customer-email" class="form-control" value="@order.CustomerEmail" />
        </div>
        <div class="form-group">
            <label class="control-label">Customer Invoice Reference </label>
            <input id="input-edit-customer-invoiceref" class="form-control" value="@order.CustomerInvoiceReference" />
        </div>
        <hr>
        <div class="form-group">
            <label class="control-label">Comments </label>
            <textarea id="input-edit-comments" class="form-control">@order.Comments</textarea>
        </div>
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button id="btn-edit-order" type="button" class="btn btn-primary">Save <i class="fa fa-spinner fa-pulse fa-fw" aria-hidden="true" style="display:none"></i></button>
        </div>
    </div>
    </div>
</div>

@* Div to disable inputs.
TODO: Gotta do it in a better way later. *@
<div id="input-disabler" style="position: fixed; top: 0; left: 0; bottom: 0; right: 0; color: transparent; z-index:2000; display: none"></div>

@section scripts { 
    <script>

        $(function () {
            const variants = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(variants));
            const $sVariants = $('#selected-variant');
            const $sProducts = $("#selected-product");

            $('[data-toggle="popover"]').popover({
               html: true
            })
            $sProducts.change(function() {
                // Remove existing options
                $sVariants.empty();

                const n = $(this).val();
                const currentVariants = variants.filter(function(v){ return v.pid == n });

                currentVariants.forEach(function(v){
                    $sVariants.append($('<option>', {
                        value: v.id,
                        text: v.name
                    }));
                });
                if(currentVariants.length > 0) {
                    // enable the input
                    $sVariants.prop('disabled', false);
                } else {
                    // Disable the input
                    $sVariants.prop('disabled', true);
                }
            });
            
            const $disabler = $('#input-disabler');
            const $spinner = $('.fa-spinner');
            $('#btn-add-orderline').bind('click', function() {
                if($sProducts.val() == null) return;
                $spinner.show();
                $disabler.show();
                const data = {
                    orderId: "@order.OrderId",
                    productId: $sProducts.val(),
                    variantId: $sVariants.val()
                };

                $.postJSON('/api/v0/orders/line/add', data).done(function(x) {
                    location.reload();
                }).fail(function(){
                    $spinner.hide();
                    $disabler.hide();
                })

            })


            $('.btn-edit-line').on('click', function() {
                const editId = $(this).data('id');
                const productId = $(this).data('product-id');
                
                const $editModal = $('#edit-orderline-modal');
                const $inputVariants = $('#input-edit-variant');
                const $inputQuantity = $('#input-edit-quantity');
                const $inputPrice = $('#input-edit-price');

                $inputQuantity.val($(this).data('quantity'));
                $inputPrice.val($(this).data('price'));
                $editModal.modal('show');

                $('#btn-edit-orderline').on('click', function() {
                    const postdata = {
                        quantity: $inputQuantity.val(),
                        price: $inputPrice.val(),
                        variantId: $inputVariants.val()
                    };
                    $spinner.show();
                    $disabler.show();
                    $.postJSON('/api/v0/orders/line/update/' + editId, postdata)
                    .done(function(){
                        location.reload();
                    }).fail(function(){
                        $spinner.hide();
                        $disabler.hide();
                    })
                    $(this).off('click');
                });

                // Remove existing options
                $inputVariants.empty();
                const currentVariants = variants.filter(function(v){ return v.pid == productId });
                currentVariants.forEach(function(v){
                    $inputVariants.append($('<option>', {
                        value: v.id,
                        text: v.name
                    }));
                });
                if(currentVariants.length > 0) {
                    // enable the input
                    $inputVariants.prop('disabled', false);
                } else {
                    // Disable the input
                    $inputVariants.prop('disabled', true);
                }
            })

            $('#btn-edit-order').on('click', function() {
                const postData = {
                    customerName: $('#input-edit-customer-name').val(),
                    customerEmail: $('#input-edit-customer-email').val(),
                    invoiceReference: $('#input-edit-customer-invoiceref').val(),
                    comments: $('#input-edit-comments').val()
                }
                $spinner.show();
                $disabler.show();
                $.postJSON('/api/v0/orders/update/@order.OrderId', postData).done(function() {
                    location.reload();
                }).fail(function(){
                    $spinner.hide();
                    $disabler.hide();
                })
            })
        })


        function deleteOrderLine(lineid) {
            $.post('/api/v0/orders/line/delete/' + lineid, function() {
                location.reload();
            })
        }

        function updateOrderStatus(status) {
            toastr.info('Please wait.', null, { timeOut: 0 });
            $.post('/api/v0/orders/update/@id/' + status, function() {
                location.reload();
            })            
        }

        function deleteOrder() {
            $.post('/api/v0/orders/delete/@id').done(function() {
                toastr.success('Order deleted. Redirecting.')
                window.setTimeout(function(){
                    window.location.href = "/Admin/Orders";
                }, 3000);
            })
        }

        function reopenOrder() {
            $.post('/api/v0/orders/reopen/@id').done(function(id) {
                window.location.href = "/Admin/Orders/Details/"+id;
            }).fail(function(){
                toastr.fail('Reopening failed. Create a new order manually instead.')
            })
        }

        function makeFree() {
            $.post('/api/v0/orders/update/@id/make-free').done(function() {
                location.reload();
            })
        }
    </script>
    
}
